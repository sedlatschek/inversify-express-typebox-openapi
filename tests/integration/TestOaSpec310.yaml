openapi: 3.1.0
info:
  title: TestOa
  version: 0.2.0
  description: The expected OpenAPI 3.1.0 spec for the test controllers
  contact:
    email: developer@example.org
paths:
  /api/users/me:
    get:
      operationId: TestOaController310User::getUserFromSession
      responses:
        "200":
          description: The user from the session
          content:
            application/json:
              schema: &a1
                type: object
                properties:
                  id:
                    type: number
                  name:
                    type: string
                  email:
                    type: string
                  createdAt:
                    format: date-time
                    type: string
                  state:
                    anyOf:
                      - const: active
                        type: string
                      - const: inactive
                        type: string
                      - const: pending
                        type: string
                required:
                  - id
                  - name
                  - email
                  - createdAt
                  - state
        "401":
          description: Unauthorized
      parameters:
        - name: sessionId
          in: cookie
          schema:
            type: string
          required: true
  /api/users/:
    get:
      operationId: TestOaController310User::getAllUsers
      responses:
        "200":
          description: List of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    name:
                      type: string
                    email:
                      type: string
                    createdAt:
                      format: date-time
                      type: string
                    state:
                      anyOf:
                        - const: active
                          type: string
                        - const: inactive
                          type: string
                        - const: pending
                          type: string
                  required:
                    - id
                    - name
                    - email
                    - createdAt
                    - state
      parameters:
        - name: Accept-Language
          in: header
          schema:
            type: string
          required: false
        - name: state
          in: query
          schema:
            anyOf:
              - const: active
                type: string
              - const: inactive
                type: string
              - const: pending
                type: string
          required: false
    post:
      operationId: TestOaController310User::createUser
      responses:
        "201":
          description: The created user
          content:
            application/json:
              schema: *a1
      requestBody:
        content:
          application/json:
            schema: *a1
  /api/users/active:
    get:
      operationId: TestOaController310User::getAllActiveUsers
      responses:
        "200":
          description: List of all active users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    name:
                      type: string
                    email:
                      type: string
                    createdAt:
                      format: date-time
                      type: string
                    state:
                      anyOf:
                        - const: active
                          type: string
                        - const: inactive
                          type: string
                        - const: pending
                          type: string
                  required:
                    - id
                    - name
                    - email
                    - createdAt
                    - state
      deprecated: true
  /api/users/{userId}:
    get:
      operationId: TestOaController310User::getUserById
      responses:
        "200":
          description: The requested user
          content:
            application/json:
              schema: *a1
        "404":
          description: User not found
      parameters:
        - name: Accept-Language
          in: header
          schema:
            type: string
          required: false
        - name: userId
          in: path
          schema:
            type: number
          required: true
    put:
      operationId: TestOaController310User::updateUser
      responses:
        "200":
          description: The updated user
        "404":
          description: User not found
      requestBody:
        content:
          application/json:
            schema: *a1
      parameters:
        - name: userId
          in: path
          schema:
            type: number
          required: true
    delete:
      operationId: TestOaController310User::deleteUser
      responses:
        "204":
          description: User deleted
        "404":
          description: User not found
      parameters:
        - name: userId
          in: path
          schema:
            type: number
          required: true
  /api/users/{userId}/state:
    patch:
      operationId: TestOaController310User::patchUserState
      responses:
        "200":
          description: The updated user
          content:
            application/json:
              schema: *a1
        "404":
          description: User not found
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - const: active
                  type: string
                - const: inactive
                  type: string
                - const: pending
                  type: string
      parameters:
        - name: userId
          in: path
          schema:
            type: number
          required: true
  /api/users/{userId}/posts:
    get:
      operationId: TestOaController310User::getUserPosts
      responses:
        "200":
          description: List of the users posts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    userId:
                      type: number
                    title:
                      type: string
                    content:
                      type: string
                    createdAt:
                      format: date-time
                      type: string
                  required:
                    - id
                    - userId
                    - title
                    - content
                    - createdAt
      parameters:
        - name: Accept-Language
          in: header
          schema:
            type: string
          required: false
        - name: userId
          in: path
          schema:
            type: number
          required: true
  /api/posts/:
    post:
      operationId: TestOaController310Post::createPost
      responses:
        "201":
          description: Post created
          content:
            application/json:
              schema: &a2
                type: object
                properties:
                  id:
                    type: number
                  userId:
                    type: number
                  title:
                    type: string
                  content:
                    type: string
                  createdAt:
                    format: date-time
                    type: string
                required:
                  - id
                  - userId
                  - title
                  - content
                  - createdAt
      requestBody:
        content:
          application/json:
            schema: *a2
  /api/posts/{postId}:
    put:
      operationId: TestOaController310Post::updatePost
      responses:
        "200":
          description: Post updated
          content:
            application/json:
              schema: *a2
        "404":
          description: Post not found
      requestBody:
        content:
          application/json:
            schema: *a2
      parameters:
        - name: postId
          in: path
          schema:
            type: number
          required: true
    delete:
      operationId: TestOaController310Post::deletePost
      responses:
        "200":
          description: Post deleted
        "404":
          description: Post not found
      parameters:
        - name: postId
          in: path
          schema:
            type: number
          required: true
components:
  schemas: {}
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes: {}
  links: {}
  callbacks: {}
tags: []
servers: []
